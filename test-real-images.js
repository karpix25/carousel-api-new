const fs = require('fs');
const path = require('path');

console.log('üñºÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ä–µ–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');

async function testRealImages() {
  try {
    const testText = `# –ú–æ—è –ø–µ—Ä–≤–∞—è –∫–∞—Ä—É—Å–µ–ª—å

–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∞—Å–∏–≤—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑ –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.

## –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã

- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- –ö—Ä–∞—Å–∏–≤–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞  
- –†–∞–∑–Ω—ã–µ —Å—Ç–∏–ª–∏ —Å–ª–∞–π–¥–æ–≤
- –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

> "–•–æ—Ä–æ—à–∏–π –¥–∏–∑–∞–π–Ω –≥–æ–≤–æ—Ä–∏—Ç —Å–∞–º –∑–∞ —Å–µ–±—è"

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–∏ –∫–∞—Ä—Ç–æ—á–∫–∏!`;

    console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å —Ç–µ–∫—Å—Ç–æ–º...');
    const startTime = Date.now();

    const response = await fetch('http://localhost:3001/api/generate-carousel', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ text: testText })
    });

    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    }

    const result = await response.json();
    const processingTime = Date.now() - startTime;

    console.log('‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
    console.log(`üìä –°–ª–∞–π–¥–æ–≤: ${result.metadata.totalSlides}`);
    console.log(`‚è±Ô∏è –í—Ä–µ–º—è: ${processingTime}–º—Å`);

    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    const outputDir = path.join(__dirname, 'generated-images');
    if (!fs.existsSync(outputDir)) {
      fs.mkdirSync(outputDir, { recursive: true });
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    result.images.forEach((imageBase64, index) => {
      const filename = `carousel_slide_${index + 1}.png`;
      const filepath = path.join(outputDir, filename);
      
      const buffer = Buffer.from(imageBase64, 'base64');
      fs.writeFileSync(filepath, buffer);
      
      const sizeKB = Math.round(buffer.length / 1024);
      console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω: ${filename} (${sizeKB}KB)`);
    });

    console.log(`\nüéâ –ì–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä–æ–π—Ç–µ –ø–∞–ø–∫—É: generated-images`);
    console.log('üì± –í–∞—à–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –≥–æ—Ç–æ–≤—ã!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

testRealImages();
